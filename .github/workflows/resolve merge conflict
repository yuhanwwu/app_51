// mport 'package:flutter/material.dart';
// import 'package:flutter/foundation.dart';
// import 'package:http/http.dart' as http;
// import 'dart:convert';

// <<<<<<< render_db
// class _LoginPageState extends State<LoginPage> {
//   final _controller = TextEditingController();
//   String error = '';
//   bool _isLoading = false;

// String _getBaseUrl() {
//   // Force local development for now
//   return 'http://127.0.0.1:5000';  // Always use local Flask server
  
//   // Original code (commented out for now):
//   // if (kDebugMode) {
//   //   return 'http://127.0.0.1:5000';
//   // } else {
//   //   return 'https://app-51-web.onrender.com';
//   // }
// }

//   void login() async {
//     setState(() {
//       _isLoading = true;
//       error = '';
//     });

//     final username = _controller.text.trim();
//     final baseUrl = _getBaseUrl();
//     final url = Uri.parse('$baseUrl/api/users/$username/');
    
//     print('Environment: ${kDebugMode ? "Development" : "Production"}');
//     print('Attempting login with URL: $url');
    
//     try {
//       final response = await http.get(url);
//       print('Response status: ${response.statusCode}');
//       print('Response body: ${response.body}');
      
//       if (response.statusCode == 200) {
//         final data = jsonDecode(response.body);
//         widget.onLogin(data);
//       } else if (response.statusCode == 404) {
//         setState(() => error = 'User not found');
//       } else {
//         setState(() => error = 'Server error: ${response.statusCode}');
//       }
//     } catch (e) {
//       print('Login error: $e');
//       setState(() => error = 'Connection error: $e');
//     } finally {
//       setState(() => _isLoading = false);
//     }
//   }

//   void fetchAllUsers() async {
//     final baseUrl = _getBaseUrl();
//     final url = Uri.parse('$baseUrl/api/users/');
//     print('Fetching users from: $url');
    
//     try {
//       final response = await http.get(url);
//       if (response.statusCode == 200) {
//         final List users = jsonDecode(response.body);
//         print('All users:');
//         for (var user in users) {
//           print('Username: ${user['username']}, Name: ${user['name']}');
//         }
//       } else {
//         print('Failed to load users. Status: ${response.statusCode}');
//       }
//     } catch (e) {
//       print('Error fetching users: $e');
//     }
//   }

//   void _devQuickLogin() {
//     widget.onLogin({
//       'username': 'alice',
//       'name': 'Alice Anderson',
//     });
//   }

//   @override
//   void initState() {
//     super.initState();
//     fetchAllUsers();  // This prints users in your debug console when page loads
//   }

  // @override
  // Widget build(BuildContext context) {
  //   return Padding(
  //     padding: EdgeInsets.all(20.0),
  //     child: Column(
  //       mainAxisAlignment: MainAxisAlignment.center,
  //       crossAxisAlignment: CrossAxisAlignment.stretch,
  //       children: [
  //         Text(
  //           'Welcome to Flat Task Manager',
  //           style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
  //           textAlign: TextAlign.center,
  //         ),
  //         SizedBox(height: 40),
  //         TextField(
  //           controller: _controller,
  //           decoration: InputDecoration(
  //             labelText: 'Username',
  //             border: OutlineInputBorder(),
  //             prefixIcon: Icon(Icons.person),
  //           ),
  //         ),
  //         SizedBox(height: 20),
  //         ElevatedButton(
  //           onPressed: _isLoading ? null : login,
  //           style: ElevatedButton.styleFrom(
  //             padding: EdgeInsets.symmetric(vertical: 15),
  //           ),
  //           child: _isLoading 
  //             ? CircularProgressIndicator(color: Colors.white)
  //             : Text("Log in", style: TextStyle(fontSize: 16)),
  //         ),
  //         if (error.isNotEmpty) 
  //           Padding(
  //             padding: EdgeInsets.only(top: 20),
  //             child: Text(
  //               error, 
  //               style: TextStyle(color: Colors.red),
  //               textAlign: TextAlign.center,
  //             ),
  //           ),
  //         SizedBox(height: 20),
  //         Text(
  //           'Available users: alice, bob, charlie',
  //           style: TextStyle(color: Colors.grey, fontSize: 12),
  //           textAlign: TextAlign.center,
  //         ),
  //         SizedBox(height: 10),
  //         OutlinedButton(
  //           onPressed: _devQuickLogin,
  //           child: Text("DEV: Quick Login as Alice"),
  //         ),
  //       ],
  //     ),
  //   );
  // }

//   @override
//   void dispose() {
//     _controller.dispose();
//     super.dispose();
//   }
// }
// =======
// import 'dart:convert';
// import 'package:flutter/material.dart';
// import 'package:flutter/services.dart' show rootBundle;
// import '../models/user.dart';

// class LoginPage extends StatefulWidget {
//   final Function(User) onLogin;

//   const LoginPage({Key? key, required this.onLogin}) : super(key: key);

//   @override
//   _LoginPageState createState() => _LoginPageState();
// }

// class _LoginPageState extends State<LoginPage> {
//   final TextEditingController _usernameController = TextEditingController();
//   String? error;

//   Future<Map<String, dynamic>> loadJson() async {
//     final jsonString = await rootBundle.loadString('assets/data.json');
//     return json.decode(jsonString);
//   }

//   void login() async {
//     setState(() {
//       error = null;
//     });

//     final username = _usernameController.text.trim();

//     if (username.isEmpty) {
//       setState(() {
//         error = 'Please enter a username';
//       });
//       return;
//     }

//     final data = await loadJson();

//     // if (data['users'] != null) {
//     //   final users = data['users'] as List<dynamic>;

//     //   final userMap = users.firstWhere(
//     //     (user) => user['username'] == username,
//     //     orElse: () => null, // 
//     //   );

//     Map<String, dynamic>? userMap;
//     try {
//       final users = data['users'] as List<dynamic>;
//       userMap = users.firstWhere(
//         (user) => user['username'] == username,
//       );
//       final user = User.fromJson(userMap!);
//       widget.onLogin(user);
//       return;
      
//     } catch (e) {
//       userMap = null;
//       setState(() {
//         error = 'Username not found';
//         });
//       }

//       // if (userMap != null) {
//       //   final user = User.fromJson(userMap);
//       //   widget.onLogin(user);
//       //   return;
//       // }

//     // setState(() {
//     //   error = 'Username not found';
//     // });
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(title: const Text('Login')),
//       body: Padding(
//         padding: const EdgeInsets.all(16),
//         child: Column(
//           children: [
//             TextField(
//               controller: _usernameController,
//               decoration: const InputDecoration(labelText: 'Username'),
//             ),
//             const SizedBox(height: 12),
//             ElevatedButton(
//               onPressed: login,
//               child: const Text('Log In'),
//             ),
//             if (error != null)
//               Padding(
//                 padding: const EdgeInsets.only(top: 12),
//                 child: Text(error!, style: const TextStyle(color: Colors.red)),
//               ),
//           ],
//         ),
//       ),
//     );
//   }
// }
// >>>>>>> master